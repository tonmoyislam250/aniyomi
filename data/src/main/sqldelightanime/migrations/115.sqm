import java.util.Date;

DROP INDEX IF EXISTS animehistory_history_episode_id_index;
DROP VIEW IF EXISTS animehistoryView;

/**
 *  [last_seen] was made not-null
 *  [time_seen] was removed
 *  `animehistory` prefix was removed from table name
 */
ALTER TABLE animehistory RENAME TO animehistory_temp;
CREATE TABLE animehistory(
    _id INTEGER NOT NULL PRIMARY KEY,
    episode_id INTEGER NOT NULL UNIQUE,
    last_seen INTEGER AS Date NOT NULL,
    FOREIGN KEY(episode_id) REFERENCES episodes (_id)
    ON DELETE CASCADE
);
INSERT INTO animehistory
SELECT animehistory_id, animehistory_episode_id, coalesce(animehistory_last_seen, 0)
FROM animehistory_temp;

/**
 *  [history.time_read] was added as a column in [historyView]
 */
CREATE VIEW animehistoryView AS
SELECT
    animehistory._id AS id,
    animes._id AS animeId,
    episodes._id AS episodeId,
    animes.title,
    animes.thumbnail_url AS thumbnailUrl,
    episodes.chapter_number AS episodeNumber,
    animehistory.last_seen AS seenAt,
    max_last_seen.last_seen AS maxSeenAt,
    max_last_seen.episode_id AS maxSeenAtEpisodeId
FROM animes
JOIN episodes
ON animes._id = episodes.anime_id
JOIN animehistory
ON episodes._id = animehistory.episode_id
JOIN (
    SELECT episodes.anime_id,episodes._id AS episode_id, MAX(animehistory.last_seen) AS last_seen
    FROM episodes JOIN animehistory
    ON episodes._id = animehistory.episode_id
    GROUP BY episodes.anime_id
) AS max_last_seen
ON episodes.anime_id = max_last_seen.anime_id;

CREATE INDEX animehistory_history_chapter_id_index ON animehistory(episode_id);